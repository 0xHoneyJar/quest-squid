type Quest @entity {
  id: ID!
  name: String! @index
  chain: String! @index
  steps: [QuestStep!]! @derivedFrom(field: "quest")
  startTime: Int @index
  endTime: Int @index
  totalParticipants: Int!
  totalCompletions: Int!
}

type QuestStep @entity {
  id: ID!
  quest: Quest!
  stepNumber: Int! @index
  type: String! @index
  address: String! @index
  tokenId: BigInt
  filterCriteria: JSON
  requiredAmount: BigInt!
  includeTransaction: Boolean!
}

type UserQuestProgress
  @entity
  @index(fields: ["address", "quest"])
  @index(fields: ["completed", "quest"]) {
  id: ID! @index
  address: String! @index
  quest: Quest!
  completedSteps: Int! @index
  completed: Boolean! @index
  stepProgresses: [StepProgress!]! @derivedFrom(field: "userQuestProgress")
}

type StepProgress @entity {
  id: ID!
  userQuestProgress: UserQuestProgress!
  stepNumber: Int! @index
  progressAmount: BigInt!
  completed: Boolean! @index
}

type Mission @entity {
  id: ID!
  name: String! @index
  chain: String! @index
  address: String! @index
  startTime: Int! @index
  startStreak: JSON!
  endStreak: JSON!
}

type UserMissionProgress @entity {
  id: ID!
  address: String! @index
  mission: Mission!
  lastActivationTimestamp: Int! @index
  lastStreakUpdateTimestamp: Int! @index
  currentStreak: Int! @index
  longestStreak: Int! @index
}
